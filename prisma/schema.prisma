// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brand {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  models    Model[]

  @@map("brand")
}

model Model {
  id        Int      @id @default(autoincrement())
  uuid      String   @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  brand     Brand?   @relation(fields: [brandId], references: [id])
  brandId   Int?

  @@unique([brandId, name])
  @@map("model")
}

model User {
  id           Int       @id @default(autoincrement())
  uuid         String    @default(cuid())
  email        String    @unique
  password     String
  refreshToken String?   @map(name: "refresh_token")
  lastSession  DateTime  @default(now())
  vehicles     Vehicle[] @relation("UserToVehicle", name: "favorite")

  @@map("user")
}

model Website {
  id        Int       @id @default(autoincrement())
  uuid      String    @unique @default(cuid())
  name      String    @unique
  url       String    @unique
  status    Status    @default(ACTIVE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  vehicle   Vehicle[]

  @@map("website")
}

model WebsiteSyncLog {
  id                Int         @id @default(autoincrement())
  createdAt         DateTime    @default(now())
  duration          String
  errorMessage      String?
  vehiclesCondition Condition[]

  @@map("website_sync_log")
}

model Vehicle {
  id             Int        @id @default(autoincrement())
  uuid           String     @unique @default(cuid())
  externalId     String?    @unique
  url            String     @unique
  description    String?
  year           Int?
  transmission   String?
  mileage        Decimal?   @default(0) @db.Decimal(12, 2)
  engineType     String?
  enginePowerRpm String?
  enginePowerHp  String?
  engineFuelType String?
  speeds         Int?
  frontImage     String?
  images         String?
  doors          Int?
  condition      Condition?
  price          Decimal?   @default(0) @db.Decimal(12, 2)
  currency       Currency?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now()) @updatedAt
  website        Website?   @relation(fields: [websiteId], references: [id])
  websiteId      Int?
  status         Status     @default(ACTIVE)
  users          User[]     @relation("UserToVehicle", name: "favorite")

  @@map("vehicle")
}

enum Status {
  ACTIVE
  INACTIVE
}

enum Condition {
  NEW
  USED
}

enum Currency {
  PEN
  USD
}
